AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: chat-document-backend

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    Tracing: Active
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Parameters:
  OPENSEARCHUSERNAME:
    Type: String
    Default: admin
  OPENSEARCHPASSWORD:
    Type: String
    Default: Amazon_Web_Services_123
  OPENSEARCHDOMAIN:
    Type: String
    Default: "search-jus-domain-o4yxe4f3dx2g4xnn5x7yradww4.us-east-1.es.amazonaws.com"
  OPENSEARCHINDEX:
    Type: String
    Default: documents
  LLMMODELID:
    Type: String
    Default: "anthropic.claude-instant-v1"
  EMBEDDINGMODELID:
    Type: String
    Default: "amazon.titan-embed-text-v1"

Resources:
  MediaBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-media"
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
            AllowedOrigins:
              - "*"
            Id: CORSRule
            MaxAge: 3600

  PreProcessDocumentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/preprocess/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Timeout: 600
      MemorySize: 2048
      Policies:
        - S3CrudPolicy:
            BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-media"
        - Statement:
            - Sid: BedrockPolicy
              Effect: Allow
              Action:
                - bedrock:*
              Resource: "*"
      Environment:
        Variables:
          OPENSEARCH_USERNAME: !Ref OPENSEARCHUSERNAME
          OPENSEARCH_PASSWORD: !Ref OPENSEARCHPASSWORD
          OPENSEARCH_DOMAIN: !Ref OPENSEARCHDOMAIN
          OPENSEARCH_INDEX: !Ref OPENSEARCHINDEX
          LLM_MODEL_ID: !Ref LLMMODELID
          EMBEDDING_MODEL_ID: !Ref EMBEDDINGMODELID
      Events:
        MyS3Event:
          Type: S3
          Properties:
            Bucket: !Ref MediaBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .pdf

  UploadDocumentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/s3_presigned_upload/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - S3CrudPolicy:
            BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-media"
      Environment:
        Variables:
          BUCKET_NAME: !Sub "${AWS::AccountId}-${AWS::Region}-media"
      Events:
        UploadDocument:
          Type: Api
          Properties:
            Path: /upload
            Method: post

  AnswerQuestionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/answer_question/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      MemorySize: 2048
      Policies:
        - TranslateReadOnly
        - ComprehendReadOnly
        - S3CrudPolicy:
            BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-media"
        - Statement:
            - Sid: BedrockPolicy
              Effect: Allow
              Action:
                - bedrock:*
              Resource: "*"
      Environment:
        Variables:
          BUCKET_NAME: !Sub "${AWS::AccountId}-${AWS::Region}-media"
          OPENSEARCH_USERNAME: !Ref OPENSEARCHUSERNAME
          OPENSEARCH_PASSWORD: !Ref OPENSEARCHPASSWORD
          OPENSEARCH_DOMAIN: !Ref OPENSEARCHDOMAIN
          OPENSEARCH_INDEX: !Ref OPENSEARCHINDEX
          LLM_MODEL_ID: !Ref LLMMODELID
          EMBEDDING_MODEL_ID: !Ref EMBEDDINGMODELID
      Events:
        AnswerQuestion:
          Type: Api
          Properties:
            Path: /chat
            Method: get

  SearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/search_docs/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - Statement:
            - Sid: BedrockPolicy
              Effect: Allow
              Action:
                - bedrock:*
              Resource: "*"
      Environment:
        Variables:
          OPENSEARCH_USERNAME: !Ref OPENSEARCHUSERNAME
          OPENSEARCH_PASSWORD: !Ref OPENSEARCHPASSWORD
          OPENSEARCH_DOMAIN: !Ref OPENSEARCHDOMAIN
          OPENSEARCH_INDEX: !Ref OPENSEARCHINDEX
          EMBEDDING_MODEL_ID: !Ref EMBEDDINGMODELID
      Events:
        SearchDocs:
          Type: Api
          Properties:
            Path: /search
            Method: get

  DownloadDocumentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/s3_presigned_download/
      Handler: app.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      Environment:
        Variables:
          BUCKET_NAME: !Ref MediaBucket
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref MediaBucket
      Events:
        S3PresignedUrl:
          Type: Api
          Properties:
            Path: /download
            Method: get

Outputs:
  BackendAPI:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
